spring:
  application:
    name: project-service
  cloud:
    discovery:
      enabled: true

  datasource:
    url: jdbc:postgresql://project-db:5432/projectDB
    username: ${PROJECT_DB_USER}
    password: ${PROJECT_DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      minimum-idle: 3
      maximum-pool-size: 5

  # JPA configuration
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: true

  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USER}
    password: ${RABBITMQ_PASSWORD}

scholarai:
  rabbitmq:
    exchange: scholarai.exchange
    web-search:
      queue: web-search-queue
      routing-key: web-search
      completed-queue: web-search-completed-queue
      completed-routing-key: web-search-completed

server:
  port: 8083
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: never
    include-exception: false

eureka:
  client:
    service-url:
      defaultZone: http://service-registry:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    hostname: project-service
    prefer-ip-address: true


management:
  info:
    git:
      mode: full
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
  metrics:
    tags:
      application: "${spring.application.name}"
  tracing:
    enabled: false
    sampling:
      probability: 1

springdoc:
  api-docs:
    enabled: true
  show-actuator: true
  use-management-port: false
  swagger-ui:
    path: /docs
    # Enable authorization persistence in browser
    persistAuthorization: true
    # Enable deep linking for swagger operations
    deepLinking: true
    # Display request duration in swagger UI
    displayRequestDuration: true
    # Enable filtering of operations
    filter: true
    # Show common extensions
    showExtensions: true
    # Sort operations alphabetically
    operationsSorter: alpha
    # Sort tags alphabetically
    tagsSorter: alpha
    # Enable try it out by default
    tryItOutEnabled: true


cors:
  allowed-origins: "https://localhost:3000,https://example.com"

logging:
  level:
    root: INFO
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.springframework.security: DEBUG

    # quiet only Eureka-related logs
    com.netflix.discovery: WARN
    com.netflix.eureka: WARN
    org.springframework.cloud.netflix.eureka: WARN
    org.springframework.cloud.client.discovery: INFO

gemini:
  api:
    key: ${GEMINI_API_KEY:AIzaSyD1f5phqFOLvgC4zRnpPCd6EBQOegKHNuw}

