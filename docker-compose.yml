version: '3.8'

services:
  project-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: scholar-project-service
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8083
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://service-registry:8761/eureka/
      - PROJECT_DB_USER=scholar
      - PROJECT_DB_PASSWORD=FindSolace@0
      - RABBITMQ_HOST=user-rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=scholar
      - RABBITMQ_PASSWORD=FindSolace@0
    networks:
      - scholarai-network
    restart: unless-stopped
    # Will connect to existing infrastructure via network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Note: project-postgres is already running from meta/Scripts/docker.sh
  # This service will connect to the existing project-db container

  # Note: service-registry is already running from the main orchestration
  # This service will connect to the existing service-registry container

# Volumes are managed by meta/Scripts/docker.sh

networks:
  scholarai-network:
    external: true
    name: docker_scholarai-network
